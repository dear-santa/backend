<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dearsanta.app.mapper.BoardMapper">
    <insert id="createBoard" parameterType="com.dearsanta.app.dto.BoardRequestDto">
        INSERT INTO board (
            id,
            board_category_id,
            title,
            content,
            member_id,
            img_url
        ) VALUES (
                     #{id, jdbcType=VARCHAR},
                     #{boardCategoryId, jdbcType=VARCHAR},
                     #{title, jdbcType=VARCHAR},
                     #{content, jdbcType=VARCHAR},
                     #{memberId, jdbcType=VARCHAR},
                     #{imgUrl, jdbcType=VARCHAR}
                 )
    </insert>
    <select id="getBoard" resultType="com.dearsanta.app.dto.BoardDto">
        SELECT  board.id,
                board.title,
                board.content,
                board.created_date AS createdDate,
                board.updated_date AS updatedDate,
                board.user_id AS userId,
                member.nickname AS userNickname,
                member.img_url AS userImgUrl,
                0 AS isMine,
                board.img_url AS imgUrl,
                board.like_count AS likeCount,
                board.view_count AS viewCount,
                board.reply_count AS replyCount
        FROM    board
        WHERE   id = #{boardId}
        AND     is_deleted = 0
    </select>
    <update id="updateBoard" parameterType="com.dearsanta.app.domain.Board">
        UPDATE  board
        SET     title = #{title, jdbcType=VARCHAR},
                content = #{content, jdbcType=VARCHAR},
                img_url = #{imgUrl, jdbcType=VARCHAR},
                updated_date = sysdate
        WHERE   id = #{id, jdbcType=VARCHAR}
    </update>
    <delete id="deleteBoard">
        UPDATE  board
        SET     is_deleted = 1
        WHERE   id = #{boardId}
    </delete>

    <select id="getBoardListByMemberId" parameterType="com.dearsanta.app.dto.Criteria" resultType="com.dearsanta.app.dto.BoardDto">
        <![CDATA[
        SELECT
            id,
            title,
            content,
            created_date AS createdDate,
            updated_date AS updatedDate,
            member_id AS memberId,
            img_url AS imgUrl,
            like_count AS likeCount,
            view_count AS viewCount,
            reply_count AS replyCount
        FROM
            (
            SELECT /*+ INDEX_DESC(board ${criteria.sorted}) */
                rownum AS rn,
                id,
                title,
                content,
                created_date,
                updated_date,
                member_id,
                img_url,
                like_count,
                view_count,
                reply_count
            FROM board
            WHERE member_id = #{criteria.selectId, jdbcType=VARCHAR}
            AND rownum <= #{criteria.pageNum} * #{criteria.pageSize}
            )
        WHERE rn > (#{criteria.pageNum} - 1) * #{criteria.pageSize}
        ]]>
    </select>

    <select id="getBoardListByMainAndSubCategory" parameterType="com.dearsanta.app.dto.criteria.BoardCriteria" resultType="com.dearsanta.app.dto.BoardDto">
        <![CDATA[
        SELECT
            id,
            title,
            content,
            createdDate,
            updatedDate,
            memberId,
            userNickname,
            userImgUrl,
            isMine,
            imgUrl,
            likeCount,
            viewCount,
            replyCount
        FROM
            (
            SELECT /*+ INDEX_DESC(board ${criteria.sorted}) */
                rownum AS rn,
                board.id AS id,
                board.title AS title,
                board.content AS content,
                board.created_date AS createdDate,
                board.updated_date AS updatedDate,
                board.member_id AS memberId,
                member.nickname AS userNickname,
                member.img_url AS userImgUrl,
                0 AS isMine,
                board.img_url AS imgUrl,
                board.like_count AS likeCount,
                board.view_count AS viewCount,
                board.reply_count AS replyCount
            FROM board
            LEFT JOIN member
            ON board.member_id = member.id
            WHERE main_category = #{criteria.mainCategory}
            AND sub_category = #{criteria.subCategory}
            AND rownum <= #{criteria.pageNum} * #{criteria.pageSize}
            )
        WHERE rn > (#{criteria.pageNum} - 1) * #{criteria.pageSize}
        ]]>
    </select>

    <select id="getBoardListByMainCategory" parameterType="com.dearsanta.app.dto.criteria.BoardCriteria" resultType="com.dearsanta.app.dto.BoardDto">
        <![CDATA[
        SELECT
            id,
            title,
            content,
            createdDate,
            updatedDate,
            memberId,
            userNickname,
            userImgUrl,
            isMine,
            imgUrl,
            likeCount,
            viewCount,
            replyCount
        FROM
            (
            SELECT /*+ INDEX_DESC(board ${criteria.sorted}) */
                rownum AS rn,
                board.id AS id,
                board.title AS title,
                board.content AS content,
                board.created_date AS createdDate,
                board.updated_date AS updatedDate,
                board.member_id AS memberId,
                member.nickname AS userNickname,
                member.img_url AS userImgUrl,
                0 AS isMine,
                board.img_url AS imgUrl,
                board.like_count AS likeCount,
                board.view_count AS viewCount,
                board.reply_count AS replyCount
            FROM board
            LEFT JOIN member
            ON board.member_id = member.id
            WHERE main_category = #{criteria.mainCategory}
            AND rownum <= #{criteria.pageNum} * #{criteria.pageSize}
            )
        WHERE rn > (#{criteria.pageNum} - 1) * #{criteria.pageSize}
        ]]>
    </select>

    <select id="getBoardListAll" parameterType="com.dearsanta.app.dto.criteria.BoardCriteria" resultType="com.dearsanta.app.dto.BoardDto">
        <![CDATA[
        SELECT
            id,
            title,
            content,
            createdDate,
            updatedDate,
            memberId,
            userNickname,
            userImgUrl,
            isMine,
            imgUrl,
            likeCount,
            viewCount,
            replyCount
        FROM
            (
            SELECT /*+ INDEX_DESC(board ${criteria.sorted}) */
                rownum AS rn,
                board.id AS id,
                board.title AS title,
                board.content AS content,
                board.created_date AS createdDate,
                board.updated_date AS updatedDate,
                board.member_id AS memberId,
                member.nickname AS userNickname,
                member.img_url AS userImgUrl,
                0 AS isMine,
                board.img_url AS imgUrl,
                board.like_count AS likeCount,
                board.view_count AS viewCount,
                board.reply_count AS replyCount
            FROM board
            LEFT JOIN member
            ON board.member_id = member.id
            WHERE rownum <= #{criteria.pageNum} * #{criteria.pageSize}
            )
        WHERE rn > (#{criteria.pageNum} - 1) * #{criteria.pageSize}
        ]]>
    </select>

    <select id="getBoardListWithPagingByKeyword" parameterType="com.dearsanta.app.dto.Criteria" resultType="com.dearsanta.app.dto.BoardDto">
        <![CDATA[
        SELECT
            id,
            title,
            content,
            createdDate,
            updatedDate,
            userId,
            userNickname,
            userImgUrl,
            isMine,
            imgUrl,
            likeCount,
            viewCount,
            replyCount
        FROM
            (
            SELECT /*+ INDEX_DESC(board ${criteria.sorted}) */
                    rownum AS rn,
                    board.id,
                    board.title,
                    board.content,
                    board.created_date AS createdDate,
                    board.updated_date AS updatedDate,
                    board.user_id AS userId,
                    member.nickname AS userNickname,
                    member.img_url AS userImgUrl,
                    0 AS isMine,
                    board.img_url AS imgUrl,
                    board.like_count AS likeCount,
                    board.view_count AS viewCount,
                    board.reply_count AS replyCount
            FROM    board
            LEFT    JOIN member
            ON      board.user_id = member.id
            WHERE   (board.title LIKE '%' || #{criteria.selectId} || '%'
            OR      board.content LIKE '%' || #{criteria.selectId} || '%')
            AND     board.is_deleted = 0
            AND     rownum <= #{criteria.pageNum} * #{criteria.pageSize}
            )
        WHERE rn > (#{criteria.pageNum} - 1) * #{criteria.pageSize}
        ]]>

    </select>

    <update id="increaseReplyCount" parameterType="java.lang.String">
        UPDATE  board
        SET     reply_count = reply_count + 1
        WHERE   id = #{boardId}
    </update>
    <update id="increaseViewCount" parameterType="java.lang.String">
        UPDATE  board
        SET     view_count = view_count + 1
        WHERE   id = #{boardId}
    </update>
    <update id="increaseLikeCount" parameterType="java.lang.String">
        UPDATE  board
        SET     like_count = like_count + 1
        WHERE   id = #{boardId}
    </update>
    <update id="decreaseLikeCount" parameterType="java.lang.String">
        UPDATE  board
        SET     like_count = like_count - 1
        WHERE   id = #{boardId}
    </update>

    <insert id="boardLike">
        INSERT INTO board_like (
            id,
            board_id,
            member_id
        ) VALUES (
                  #{id, jdbcType=VARCHAR},
                  #{boardId, jdbcType=VARCHAR},
                  #{memberId, jdbcType=VARCHAR}
        )
    </insert>
    <delete id="boardUnlike">
        DELETE FROM board_like
        WHERE       id = #{likeId}
    </delete>

    <select id="findLikeId" parameterType="java.lang.String">
        SELECT  id
        FROM    board_like
        WHERE   board_id = #{boardId}
        AND     member_id = #{memberId}
    </select>
</mapper>